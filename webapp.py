# webapp.py
"""
Flask WebApp: –º–∞–≥–∞–∑–∏–Ω –∏ –∞—É–∫—Ü–∏–æ–Ω.
–Ø–∑—ã–∫ –∏ —Ç–µ–º–∞ –ø–æ–¥—Ç—è–≥–∏–≤–∞—é—Ç—Å—è –ø–æ ?tg_id=<—Ç–µ–ª–µ–≥—Ä–∞–º_id> (–µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω).
–ï—Å–ª–∏ tg_id –Ω–µ—Ç ‚Äî –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è DEFAULT (—É–∑–±–µ–∫, dark).
"""

from flask import Flask, render_template, request, redirect, url_for, flash, send_from_directory
from config import t, DEFAULT_LANG, DEFAULT_THEME, FLASK_SECRET, APP_URL
import database
from admin import is_admin, admin_add_product, admin_create_auction
import time, os

app = Flask(__name__, template_folder="templates", static_folder="static")
app.secret_key = FLASK_SECRET

# –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ ‚Äî –º–∞–≥–∞–∑–∏–Ω
@app.route("/")
def index():
    tg_id = request.args.get("tg_id", type=int)
    if tg_id:
        prefs = database.get_user_pref(tg_id)
        lang = prefs.get("lang", DEFAULT_LANG)
        theme = prefs.get("theme", DEFAULT_THEME)
    else:
        lang = DEFAULT_LANG
        theme = DEFAULT_THEME

    products = database.get_products(only_available=True)
    return render_template("index.html", lang=lang, theme=theme, t=t, products=products, app_url=APP_URL)

# –ê—É–∫—Ü–∏–æ–Ω—ã —Å—Ç—Ä–∞–Ω–∏—Ü–∞
@app.route("/auctions")
def auctions():
    tg_id = request.args.get("tg_id", type=int)
    if tg_id:
        prefs = database.get_user_pref(tg_id)
        lang = prefs.get("lang", DEFAULT_LANG)
        theme = prefs.get("theme", DEFAULT_THEME)
    else:
        lang = DEFAULT_LANG
        theme = DEFAULT_THEME

    auctions = database.get_auctions(only_active=True)
    return render_template("auctions.html", lang=lang, theme=theme, t=t, auctions=auctions)

# –ü—Ä–æ—Å—Ç–∞—è health
@app.route("/health")
def health():
    return "OK", 200

# Admin routes (–∫–∞–∫ —Ä–∞–Ω—å—à–µ)
@app.route("/admin", methods=["GET", "POST"])
def admin_panel():
    if request.method == "POST":
        tid = request.form.get("telegram_id")
        if tid and is_admin(tid):
            # –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ —Å–µ—Å—Å–∏—é –ø—Ä–æ—Å—Ç—É—é cookie / query - –Ω–æ –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã —Ä–∞–±–æ—Ç–∞–µ–º —á–µ—Ä–µ–∑ flash
            flash("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
            return redirect(url_for("admin_dashboard", tg_id=tid))
        else:
            flash("‚õî –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω")
            return redirect(url_for("admin_panel"))
    # —è–∑—ã–∫ –∏ —Ç–µ–º–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    lang = DEFAULT_LANG
    theme = DEFAULT_THEME
    return render_template("admin_login.html", lang=lang, theme=theme, t=t)

@app.route("/admin/dashboard")
def admin_dashboard():
    tg_id = request.args.get("tg_id", type=int)
    # –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ query param
    if not tg_id or not is_admin(tg_id):
        flash("–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∞")
        return redirect(url_for("admin_panel"))
    products = database.get_products(only_available=False)
    auctions = database.get_auctions(only_active=False)
    return render_template("admin_dashboard.html", lang=DEFAULT_LANG, theme=DEFAULT_THEME, t=t, products=products, auctions=auctions)

@app.route("/admin/add_product", methods=["POST"])
def admin_add_product_route():
    tg_id = request.args.get("tg_id", type=int)
    if not tg_id or not is_admin(tg_id):
        flash("–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω")
        return redirect(url_for("admin_panel"))
    admin_add_product(request.form)
    flash("‚úÖ –¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω")
    return redirect(url_for("admin_dashboard", tg_id=tg_id))

@app.route("/admin/create_auction", methods=["POST"])
def admin_create_auction_route():
    tg_id = request.args.get("tg_id", type=int)
    if not tg_id or not is_admin(tg_id):
        flash("–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω")
        return redirect(url_for("admin_panel"))
    admin_create_auction(request.form)
    flash("üèÅ –ê—É–∫—Ü–∏–æ–Ω —Å–æ–∑–¥–∞–Ω")
    return redirect(url_for("admin_dashboard", tg_id=tg_id))

# –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã (CSS)
@app.route("/static/<path:filename>")
def static_files(filename):
    return send_from_directory(os.path.join(os.path.dirname(__file__), "static"), filename)

# –∑–∞–ø—É—Å–∫ (–µ—Å–ª–∏ –∑–∞–ø—É—Å–∫–∞—Ç—å –Ω–∞–ø—Ä—è–º—É—é)
if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000)
