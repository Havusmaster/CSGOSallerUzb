import json
from aiogram import types, Bot
from database import db

async def handle_purchase_request(message: types.Message, bot: Bot):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø–æ–∫—É–ø–∫—É –∏–∑ WebApp"""
    try:
        data = json.loads(message.web_app_data.data)
        action = data.get("action")
        
        if action == "buy":
            item_id = data.get("item_id")
            item_type = data.get("item_type", "product")
            
            if item_type == "product":
                product = db.get_product(item_id)
                if product and product["status"] == "available":
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                    await message.answer(
                        f"‚úÖ –ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∫—É–ø–∫—É –ø—Ä–∏–Ω—è—Ç!\n\n"
                        f"üì¶ –¢–æ–≤–∞—Ä: {product['name']}\n"
                        f"üí∞ –¶–µ–Ω–∞: ${product['price']}\n\n"
                        f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è."
                    )
                    
                    # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–æ–≤
                    admin_ids = [int(id.strip()) for id in message.bot.get("ADMIN_IDS", "").split(",")]
                    for admin_id in admin_ids:
                        try:
                            await bot.send_message(
                                admin_id,
                                f"üîî –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∫—É–ø–∫—É!\n\n"
                                f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{message.from_user.username or '–±–µ–∑ username'} (ID: {message.from_user.id})\n"
                                f"üì¶ –¢–æ–≤–∞—Ä: {product['name']}\n"
                                f"üí∞ –¶–µ–Ω–∞: ${product['price']}"
                            )
                        except Exception as e:
                            print(f"Failed to notify admin {admin_id}: {e}")
                    
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–∫—É–ø–∫—É
                    db.add_purchase(message.from_user.id, item_id, "product", product['price'])
                else:
                    await message.answer("‚ùå –¢–æ–≤–∞—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.")
            
            elif item_type == "auction":
                auction = db.get_auction(item_id)
                if auction and auction["status"] == "active":
                    await message.answer(
                        f"‚úÖ –í—ã —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ –∞—É–∫—Ü–∏–æ–Ω–µ!\n\n"
                        f"üì¶ –õ–æ—Ç: {auction['name']}\n"
                        f"üí∞ –¢–µ–∫—É—â–∞—è —Å—Ç–∞–≤–∫–∞: ${auction['current_price']}\n\n"
                        f"–°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏!"
                    )
                else:
                    await message.answer("‚ùå –ê—É–∫—Ü–∏–æ–Ω –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.")
        
        elif action == "contact_admin":
            await message.answer(
                "üìû –î–ª—è —Å–≤—è–∑–∏ —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –Ω–∞–ø–∏—à–∏—Ç–µ @admin_username"
            )
            
    except Exception as e:
        print(f"Error in handle_purchase_request: {e}")
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.")
